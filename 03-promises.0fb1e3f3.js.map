{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAkBC,SAASC,cAAc,uBACzCC,EAAiBF,SAASC,cAAc,sBACxCE,EAAcH,SAASC,cAAc,wBACrCG,EAAOJ,SAASC,cAAc,QAapC,IAAII,EAAa,KAMjB,SAASC,IACP,IACIC,EADAC,EAAW,EAEfD,EAAQL,EAAeO,MACvBJ,EAAaK,aAAY,WACnBF,GAAYL,EAAYM,QAtBhC,SAAuBD,EAAUD,GAC/B,IAAMI,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQP,EAAUD,GAElBS,EAAOR,EAAUD,E,IAiBjBU,CAAc,CAAET,WAAUD,UAASW,KAAKC,GAAWC,MAAMC,GACzDb,GAAY,E,GAEbD,GAECC,GAAYL,EAAYM,OAC1Ba,cAAcjB,E,CAGlB,SAASc,EAAUI,G,IAAEf,EAAFe,EAAEf,SAAUD,EAAZgB,EAAYhB,MAC7BV,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAflB,EAAS,QAAYkB,OAANnB,EAAM,MAAK,CAC9DC,SAAQ,c,CAGd,SAASa,EAAQE,G,IAAEf,EAAFe,EAAEf,SAAUD,EAAZgB,EAAYhB,MAC3BV,EAAA2B,OAAOG,QAAQ,sBAAqCD,OAAflB,EAAS,QAAYkB,OAANnB,EAAM,MAAK,CAC7DC,SAAU,c,CAGdJ,EAAKwB,iBAAiB,UA9BtB,SAA0BC,GACxBA,EAAIC,iBACJC,WAAWzB,EAAkBP,EAAgBU,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelayInput = document.querySelector(\"input[name='delay']\");\nconst delayStepInput = document.querySelector(\"input[name='step']\");\nconst amountInput = document.querySelector(\"input[name='amount']\");\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(position, delay);\n    } else {\n      reject(position, delay);\n    }\n  });\n}\n\nlet intervalId = null;\nfunction invokePromiseSet(evt) {\n  evt.preventDefault();\n  setTimeout(createPromiseSet, firstDelayInput.value);\n}\n\nfunction createPromiseSet() {\n  let position = 1;\n  let delay = 0;\n  delay = delayStepInput.value;\n  intervalId = setInterval(() => {\n    if (position <= amountInput.value) {\n      createPromise({ position, delay }).then(onSuccess).catch(onError);\n      position += 1;\n    }\n  }, delay);\n\n  if (position >= amountInput.value) {\n    clearInterval(intervalId);\n  }\n}\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    position: 'center-top',\n  });\n}\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    position: 'center-top',\n  });\n}\nform.addEventListener('submit', invokePromiseSet);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$firstDelayInput","document","querySelector","$ce04d3a99e08e73b$var$delayStepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$intervalId","$ce04d3a99e08e73b$var$createPromiseSet","delay","position","value","setInterval","shouldResolve","Math","random","Promise","resolve","reject","$ce04d3a99e08e73b$var$createPromise","then","$ce04d3a99e08e73b$var$onSuccess","catch","$ce04d3a99e08e73b$var$onError","clearInterval","param","Notify","success","concat","failure","addEventListener","evt","preventDefault","setTimeout"],"version":3,"file":"03-promises.0fb1e3f3.js.map"}