{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAkBC,SAASC,cAAc,uBACzCC,EAAiBF,SAASC,cAAc,sBACxCE,EAAcH,SAASC,cAAc,wBACrCG,EAAOJ,SAASC,cAAc,QAapC,IAAII,EAAa,KAsBjB,SAASC,EAAUC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MAC7BZ,EAAAa,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,MAAK,CAC9DD,SAAQ,c,CAGd,SAASK,EAAQN,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MAC3BZ,EAAAa,OAAOI,QAAQ,sBAAqCF,OAAfJ,EAAS,QAAYI,OAANH,EAAM,MAAK,CAC7DD,SAAU,c,CAGdJ,EAAKW,iBAAiB,UA/BtB,SAA0BC,GACxB,IAAIP,EACJO,EAAIC,iBACJR,EAAQS,OAAOnB,EAAgBoB,OAC/BC,WAGF,SAA0BX,GACxB,IAAID,EAAW,EAQf,GAPAH,EAAagB,aAAY,YACvBb,GAAY,IACIL,EAAYgB,QAvBhC,SAAuBX,EAAUC,GAC/B,IAAMa,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQlB,EAAUC,GAElBkB,EAAOnB,EAAUC,E,IAkBjBmB,CAAc,CAAEpB,WAAUC,UAASoB,KAAKvB,GAAWwB,MAAMjB,GACzDJ,GAASS,OAAOhB,EAAeiB,O,GAEhCV,GACCD,EAAWL,EAAYgB,MAEzB,YADAY,cAAc1B,E,CAbL2B,CAAiBvB,GAAQA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelayInput = document.querySelector(\"input[name='delay']\");\nconst delayStepInput = document.querySelector(\"input[name='step']\");\nconst amountInput = document.querySelector(\"input[name='amount']\");\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(position, delay);\n    } else {\n      reject(position, delay);\n    }\n  });\n}\n\nlet intervalId = null;\nfunction invokePromiseSet(evt) {\n  let delay = 0;\n  evt.preventDefault();\n  delay = Number(firstDelayInput.value);\n  setTimeout(createPromiseSet(delay), delay);\n}\n\nfunction createPromiseSet(delay) {\n  let position = 0;\n  intervalId = setInterval(() => {\n    position += 1;\n    if (position <= amountInput.value) {\n      createPromise({ position, delay }).then(onSuccess).catch(onError);\n      delay += Number(delayStepInput.value);\n    }\n  }, delay);\n  if (position > amountInput.value) {\n    clearInterval(intervalId);\n    return;\n  }\n}\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    position: 'center-top',\n  });\n}\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    position: 'center-top',\n  });\n}\nform.addEventListener('submit', invokePromiseSet);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$firstDelayInput","document","querySelector","$ce04d3a99e08e73b$var$delayStepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$intervalId","$ce04d3a99e08e73b$var$onSuccess","param","position","delay","Notify","success","concat","$ce04d3a99e08e73b$var$onError","failure","addEventListener","evt","preventDefault","Number","value","setTimeout","setInterval","shouldResolve","Math","random","Promise","resolve","reject","$ce04d3a99e08e73b$var$createPromise","then","catch","clearInterval","$ce04d3a99e08e73b$var$createPromiseSet"],"version":3,"file":"03-promises.35718bd5.js.map"}