{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAkBC,SAASC,cAAc,uBACzCC,EAAiBF,SAASC,cAAc,sBACxCE,EAAcH,SAASC,cAAc,wBACrCG,EAAOJ,SAASC,cAAc,QAEpC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQN,EAAUC,GAElBM,EAAOP,EAAUC,EAAM,G,CAK7B,IAAIO,EAAa,KAKjB,IAAIC,EAAW,EACXC,EAAQ,EACZ,SAASC,IACPD,EAAQd,EAAegB,MACvBJ,EAAaK,aAAY,KACvB,KAAOJ,GAAYZ,EAAYe,OAC7Bb,EAAc,C,SAAEU,E,MAAUC,IAASI,KAAKC,GAAWC,MAAMC,GACzDR,GAAY,C,GAEbC,GACCD,GAAYZ,EAAYe,OAC1BM,cAAcV,E,CAGlB,SAASO,GAAYI,SAAAC,EAAUC,MAAAC,IAC7B/B,EAAAgC,OAAOC,QAAQ,uBAAqBJ,QAAiBE,MAAW,CAC5DH,SAAQ,c,CAGd,SAASF,GAAUE,SAAAM,EAAUJ,MAAAK,IAC3BnC,EAAAgC,OAAOI,QAAQ,sBAAoBF,QAAeC,MAAW,CAC3DP,SAAU,c,CAGdrB,EAAK8B,iBAAiB,UA5BtB,SAA0BC,GACxBA,EAAIC,iBACJC,WAAWpB,EAAkBlB,EAAgBmB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelayInput = document.querySelector(\"input[name='delay']\");\nconst delayStepInput = document.querySelector(\"input[name='step']\");\nconst amountInput = document.querySelector(\"input[name='amount']\");\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(position, delay);\n    } else {\n      reject(position, delay);\n    }\n  });\n}\n\nlet intervalId = null;\nfunction invokePromiseSet(evt) {\n  evt.preventDefault();\n  setTimeout(createPromiseSet, firstDelayInput.value);\n}\nlet position = 1;\nlet delay = 0;\nfunction createPromiseSet() {\n  delay = delayStepInput.value;\n  intervalId = setInterval(() => {\n    while (position <= amountInput.value) {\n      createPromise({ position, delay }).then(onSuccess).catch(onError);\n      position += 1;\n    }\n  }, delay);\n  if (position >= amountInput.value) {\n    clearInterval(intervalId);\n  }\n}\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    position: 'center-top',\n  });\n}\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    position: 'center-top',\n  });\n}\nform.addEventListener('submit', invokePromiseSet);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$firstDelayInput","document","querySelector","$47d4ff9957288465$var$delayStepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$form","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$intervalId","$47d4ff9957288465$var$position","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$createPromiseSet","value","setInterval","then","$47d4ff9957288465$var$onSuccess","catch","$47d4ff9957288465$var$onError","clearInterval","position","position2","delay","delay2","Notify","success","position3","delay3","failure","addEventListener","evt","preventDefault","setTimeout"],"version":3,"file":"03-promises.d94ddd5d.js.map"}