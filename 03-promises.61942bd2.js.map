{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAkBC,SAASC,cAAc,uBACzCC,EAAiBF,SAASC,cAAc,sBACxCE,EAAcH,SAASC,cAAc,wBACrCG,EAAOJ,SAASC,cAAc,QAapC,IAAII,EAAa,KAKjB,IAAIC,EAAW,EACXC,EAAQ,EACZ,SAASC,IACPD,EAAQL,EAAeO,MACvBJ,EAAaK,aAAY,WApB3B,IAAuBC,EAAUC,EACzBC,EAoBAP,GAAYH,EAAYM,SArBTE,EAsBH,CAAEG,SAAAR,EAAUS,MAAAR,GArBxBM,EAAgBG,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACvBP,EACFM,EAAQR,EAAUC,GAElBQ,EAAOT,EAAUC,E,KAgBkBS,KAAKC,GAAWC,MAAMC,GACzDlB,GAAY,E,GAEbC,GACCD,GAAYH,EAAYM,OAC1BgB,cAAcpB,E,CAGlB,SAASiB,EAAUI,G,IAAEC,EAAFD,EAAEZ,SAAUc,EAAZF,EAAYX,MAC7BlB,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,MAAK,CAC9Dd,SAAQ,c,CAGd,SAASU,EAAQE,G,IAAEM,EAAFN,EAAEZ,SAAUmB,EAAZP,EAAYX,MAC3BlB,EAAAgC,OAAOK,QAAQ,sBAAqCH,OAAfC,EAAS,QAAYD,OAANE,EAAM,MAAK,CAC7DnB,SAAU,c,CAGdV,EAAK+B,iBAAiB,UA5BtB,SAA0BC,GACxBA,EAAIC,iBACJC,WAAW9B,EAAkBT,EAAgBU,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelayInput = document.querySelector(\"input[name='delay']\");\nconst delayStepInput = document.querySelector(\"input[name='step']\");\nconst amountInput = document.querySelector(\"input[name='amount']\");\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(position, delay);\n    } else {\n      reject(position, delay);\n    }\n  });\n}\n\nlet intervalId = null;\nfunction invokePromiseSet(evt) {\n  evt.preventDefault();\n  setTimeout(createPromiseSet, firstDelayInput.value);\n}\nlet position = 1;\nlet delay = 0;\nfunction createPromiseSet() {\n  delay = delayStepInput.value;\n  intervalId = setInterval(() => {\n    if (position <= amountInput.value) {\n      createPromise({ position, delay }).then(onSuccess).catch(onError);\n      position += 1;\n    }\n  }, delay);\n  if (position >= amountInput.value) {\n    clearInterval(intervalId);\n  }\n}\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    position: 'center-top',\n  });\n}\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    position: 'center-top',\n  });\n}\nform.addEventListener('submit', invokePromiseSet);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$firstDelayInput","document","querySelector","$ce04d3a99e08e73b$var$delayStepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$intervalId","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$createPromiseSet","value","setInterval","position1","delay1","shouldResolve","position","delay","Math","random","Promise","resolve","reject","then","$ce04d3a99e08e73b$var$onSuccess","catch","$ce04d3a99e08e73b$var$onError","clearInterval","param","position2","delay2","Notify","success","concat","position3","delay3","failure","addEventListener","evt","preventDefault","setTimeout"],"version":3,"file":"03-promises.61942bd2.js.map"}